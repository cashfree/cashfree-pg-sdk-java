name: Publish package to the Maven Central Repository
on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: MAVEN_GPG_KEY # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml
  
      - name: Publish to Apache Maven Central
        run: mvn deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}

        
      
      # - name: Install gpg secret key
      #   run: |
      #     # Install gpg secret key
      #     cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
      #     # Verify gpg secret key
      #     gpg --list-secret-keys --keyid-format LONG
          
      # - name: Build with Maven
      #   run: mvn -B package --file pom.xml
        
      # - name: Publish package
      #   run: |
      #     mvn \
      #       --no-transfer-progress \
      #       --batch-mode \
      #       -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
      #       clean deploy
      #   env:
      #     MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      #     MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

