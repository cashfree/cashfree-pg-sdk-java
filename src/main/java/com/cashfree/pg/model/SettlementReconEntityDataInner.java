/*
 * Cashfree Payment Gateway APIs
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.pg.model;

import java.util.Objects;
import com.cashfree.pg.model.SettlementReconEntityDataInnerCustomerDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerDisputeDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerEventDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerOrderDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerPaymentDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerRefundDetails;
import com.cashfree.pg.model.SettlementReconEntityDataInnerSettlementDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.pg.JSON;

/**
 * SettlementReconEntityDataInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-01T11:00:02.685522Z[Etc/UTC]")
public class SettlementReconEntityDataInner {
  public static final String SERIALIZED_NAME_EVENT_DETAILS = "event_details";
  @SerializedName(SERIALIZED_NAME_EVENT_DETAILS)
  private SettlementReconEntityDataInnerEventDetails eventDetails;

  public static final String SERIALIZED_NAME_ORDER_DETAILS = "order_details";
  @SerializedName(SERIALIZED_NAME_ORDER_DETAILS)
  private SettlementReconEntityDataInnerOrderDetails orderDetails;

  public static final String SERIALIZED_NAME_CUSTOMER_DETAILS = "customer_details";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_DETAILS)
  private SettlementReconEntityDataInnerCustomerDetails customerDetails;

  public static final String SERIALIZED_NAME_PAYMENT_DETAILS = "payment_details";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DETAILS)
  private SettlementReconEntityDataInnerPaymentDetails paymentDetails;

  public static final String SERIALIZED_NAME_SETTLEMENT_DETAILS = "settlement_details";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_DETAILS)
  private SettlementReconEntityDataInnerSettlementDetails settlementDetails;

  public static final String SERIALIZED_NAME_DISPUTE_DETAILS = "dispute_details";
  @SerializedName(SERIALIZED_NAME_DISPUTE_DETAILS)
  private SettlementReconEntityDataInnerDisputeDetails disputeDetails;

  public static final String SERIALIZED_NAME_REFUND_DETAILS = "refund_details";
  @SerializedName(SERIALIZED_NAME_REFUND_DETAILS)
  private SettlementReconEntityDataInnerRefundDetails refundDetails;

  public SettlementReconEntityDataInner() {
  }

  public SettlementReconEntityDataInner eventDetails(SettlementReconEntityDataInnerEventDetails eventDetails) {
    
    this.eventDetails = eventDetails;
    return this;
  }

   /**
   * Get eventDetails
   * @return eventDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerEventDetails getEventDetails() {
    return eventDetails;
  }


  public void setEventDetails(SettlementReconEntityDataInnerEventDetails eventDetails) {
    this.eventDetails = eventDetails;
  }


  public SettlementReconEntityDataInner orderDetails(SettlementReconEntityDataInnerOrderDetails orderDetails) {
    
    this.orderDetails = orderDetails;
    return this;
  }

   /**
   * Get orderDetails
   * @return orderDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerOrderDetails getOrderDetails() {
    return orderDetails;
  }


  public void setOrderDetails(SettlementReconEntityDataInnerOrderDetails orderDetails) {
    this.orderDetails = orderDetails;
  }


  public SettlementReconEntityDataInner customerDetails(SettlementReconEntityDataInnerCustomerDetails customerDetails) {
    
    this.customerDetails = customerDetails;
    return this;
  }

   /**
   * Get customerDetails
   * @return customerDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerCustomerDetails getCustomerDetails() {
    return customerDetails;
  }


  public void setCustomerDetails(SettlementReconEntityDataInnerCustomerDetails customerDetails) {
    this.customerDetails = customerDetails;
  }


  public SettlementReconEntityDataInner paymentDetails(SettlementReconEntityDataInnerPaymentDetails paymentDetails) {
    
    this.paymentDetails = paymentDetails;
    return this;
  }

   /**
   * Get paymentDetails
   * @return paymentDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerPaymentDetails getPaymentDetails() {
    return paymentDetails;
  }


  public void setPaymentDetails(SettlementReconEntityDataInnerPaymentDetails paymentDetails) {
    this.paymentDetails = paymentDetails;
  }


  public SettlementReconEntityDataInner settlementDetails(SettlementReconEntityDataInnerSettlementDetails settlementDetails) {
    
    this.settlementDetails = settlementDetails;
    return this;
  }

   /**
   * Get settlementDetails
   * @return settlementDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerSettlementDetails getSettlementDetails() {
    return settlementDetails;
  }


  public void setSettlementDetails(SettlementReconEntityDataInnerSettlementDetails settlementDetails) {
    this.settlementDetails = settlementDetails;
  }


  public SettlementReconEntityDataInner disputeDetails(SettlementReconEntityDataInnerDisputeDetails disputeDetails) {
    
    this.disputeDetails = disputeDetails;
    return this;
  }

   /**
   * Get disputeDetails
   * @return disputeDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerDisputeDetails getDisputeDetails() {
    return disputeDetails;
  }


  public void setDisputeDetails(SettlementReconEntityDataInnerDisputeDetails disputeDetails) {
    this.disputeDetails = disputeDetails;
  }


  public SettlementReconEntityDataInner refundDetails(SettlementReconEntityDataInnerRefundDetails refundDetails) {
    
    this.refundDetails = refundDetails;
    return this;
  }

   /**
   * Get refundDetails
   * @return refundDetails
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SettlementReconEntityDataInnerRefundDetails getRefundDetails() {
    return refundDetails;
  }


  public void setRefundDetails(SettlementReconEntityDataInnerRefundDetails refundDetails) {
    this.refundDetails = refundDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettlementReconEntityDataInner settlementReconEntityDataInner = (SettlementReconEntityDataInner) o;
    return Objects.equals(this.eventDetails, settlementReconEntityDataInner.eventDetails) &&
        Objects.equals(this.orderDetails, settlementReconEntityDataInner.orderDetails) &&
        Objects.equals(this.customerDetails, settlementReconEntityDataInner.customerDetails) &&
        Objects.equals(this.paymentDetails, settlementReconEntityDataInner.paymentDetails) &&
        Objects.equals(this.settlementDetails, settlementReconEntityDataInner.settlementDetails) &&
        Objects.equals(this.disputeDetails, settlementReconEntityDataInner.disputeDetails) &&
        Objects.equals(this.refundDetails, settlementReconEntityDataInner.refundDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventDetails, orderDetails, customerDetails, paymentDetails, settlementDetails, disputeDetails, refundDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementReconEntityDataInner {\n");
    sb.append("    eventDetails: ").append(toIndentedString(eventDetails)).append("\n");
    sb.append("    orderDetails: ").append(toIndentedString(orderDetails)).append("\n");
    sb.append("    customerDetails: ").append(toIndentedString(customerDetails)).append("\n");
    sb.append("    paymentDetails: ").append(toIndentedString(paymentDetails)).append("\n");
    sb.append("    settlementDetails: ").append(toIndentedString(settlementDetails)).append("\n");
    sb.append("    disputeDetails: ").append(toIndentedString(disputeDetails)).append("\n");
    sb.append("    refundDetails: ").append(toIndentedString(refundDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("event_details");
    openapiFields.add("order_details");
    openapiFields.add("customer_details");
    openapiFields.add("payment_details");
    openapiFields.add("settlement_details");
    openapiFields.add("dispute_details");
    openapiFields.add("refund_details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SettlementReconEntityDataInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `event_details`
      if (jsonObj.get("event_details") != null && !jsonObj.get("event_details").isJsonNull()) {
        SettlementReconEntityDataInnerEventDetails.validateJsonElement(jsonObj.get("event_details"));
      }
      // validate the optional field `order_details`
      if (jsonObj.get("order_details") != null && !jsonObj.get("order_details").isJsonNull()) {
        SettlementReconEntityDataInnerOrderDetails.validateJsonElement(jsonObj.get("order_details"));
      }
      // validate the optional field `customer_details`
      if (jsonObj.get("customer_details") != null && !jsonObj.get("customer_details").isJsonNull()) {
        SettlementReconEntityDataInnerCustomerDetails.validateJsonElement(jsonObj.get("customer_details"));
      }
      // validate the optional field `payment_details`
      if (jsonObj.get("payment_details") != null && !jsonObj.get("payment_details").isJsonNull()) {
        SettlementReconEntityDataInnerPaymentDetails.validateJsonElement(jsonObj.get("payment_details"));
      }
      // validate the optional field `settlement_details`
      if (jsonObj.get("settlement_details") != null && !jsonObj.get("settlement_details").isJsonNull()) {
        SettlementReconEntityDataInnerSettlementDetails.validateJsonElement(jsonObj.get("settlement_details"));
      }
      // validate the optional field `dispute_details`
      if (jsonObj.get("dispute_details") != null && !jsonObj.get("dispute_details").isJsonNull()) {
        SettlementReconEntityDataInnerDisputeDetails.validateJsonElement(jsonObj.get("dispute_details"));
      }
      // validate the optional field `refund_details`
      if (jsonObj.get("refund_details") != null && !jsonObj.get("refund_details").isJsonNull()) {
        SettlementReconEntityDataInnerRefundDetails.validateJsonElement(jsonObj.get("refund_details"));
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SettlementReconEntityDataInner
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `event_details`
      if (jsonObj.get("event_details") != null && !jsonObj.get("event_details").isJsonNull()) {
        SettlementReconEntityDataInnerEventDetails.validateJsonElement(jsonObj.get("event_details"));
        return true;
      }
      // validate the optional field `order_details`
      if (jsonObj.get("order_details") != null && !jsonObj.get("order_details").isJsonNull()) {
        SettlementReconEntityDataInnerOrderDetails.validateJsonElement(jsonObj.get("order_details"));
        return true;
      }
      // validate the optional field `customer_details`
      if (jsonObj.get("customer_details") != null && !jsonObj.get("customer_details").isJsonNull()) {
        SettlementReconEntityDataInnerCustomerDetails.validateJsonElement(jsonObj.get("customer_details"));
        return true;
      }
      // validate the optional field `payment_details`
      if (jsonObj.get("payment_details") != null && !jsonObj.get("payment_details").isJsonNull()) {
        SettlementReconEntityDataInnerPaymentDetails.validateJsonElement(jsonObj.get("payment_details"));
        return true;
      }
      // validate the optional field `settlement_details`
      if (jsonObj.get("settlement_details") != null && !jsonObj.get("settlement_details").isJsonNull()) {
        SettlementReconEntityDataInnerSettlementDetails.validateJsonElement(jsonObj.get("settlement_details"));
        return true;
      }
      // validate the optional field `dispute_details`
      if (jsonObj.get("dispute_details") != null && !jsonObj.get("dispute_details").isJsonNull()) {
        SettlementReconEntityDataInnerDisputeDetails.validateJsonElement(jsonObj.get("dispute_details"));
        return true;
      }
      // validate the optional field `refund_details`
      if (jsonObj.get("refund_details") != null && !jsonObj.get("refund_details").isJsonNull()) {
        SettlementReconEntityDataInnerRefundDetails.validateJsonElement(jsonObj.get("refund_details"));
        return true;
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SettlementReconEntityDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SettlementReconEntityDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SettlementReconEntityDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SettlementReconEntityDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SettlementReconEntityDataInner>() {
           @Override
           public void write(JsonWriter out, SettlementReconEntityDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SettlementReconEntityDataInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SettlementReconEntityDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SettlementReconEntityDataInner
  * @throws IOException if the JSON string is invalid with respect to SettlementReconEntityDataInner
  */
  public static SettlementReconEntityDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SettlementReconEntityDataInner.class);
  }

 /**
  * Convert an instance of SettlementReconEntityDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

