/*
 * Cashfree Payment Gateway APIs
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2022-09-01
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.client;

import com.cashfree.ApiException;
import com.cashfree.model.ApiError;
import com.cashfree.model.ApiError404;
import com.cashfree.model.ApiError409;
import com.cashfree.model.ApiError502;
import com.cashfree.model.AuthenticationError;
import com.cashfree.model.AuthorizeOrderRequest;
import com.cashfree.model.BadRequestError;
import com.cashfree.model.IdempotencyError;
import com.cashfree.model.OrderAuthenticateEntity;
import com.cashfree.model.OrderAuthenticatePaymentRequest;
import com.cashfree.model.PayOrderEntity;
import com.cashfree.model.PayOrderRequest;
import com.cashfree.model.PaymentEntity;
import com.cashfree.model.RateLimitError;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentsApi
 */
@Disabled
public class PaymentsApiTest {

    private final PaymentsApi api = new PaymentsApi();

    /**
     * Preauthorization
     *
     * Use this API to capture or void a preauthorized payment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGAuthorizeOrderTest() throws ApiException {
        String xApiVersion = null;
        String orderId = null;
        AuthorizeOrderRequest authorizeOrderRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        PaymentEntity response = api.pGAuthorizeOrder(xApiVersion, orderId, authorizeOrderRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Submit or Resend OTP
     *
     * If you accept OTP on your own page, you can use the below API to send OTP to Cashfree.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGOrderAuthenticatePaymentTest() throws ApiException {
        String xApiVersion = null;
        String cfPaymentId = null;
        OrderAuthenticatePaymentRequest orderAuthenticatePaymentRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        OrderAuthenticateEntity response = api.pGOrderAuthenticatePayment(xApiVersion, cfPaymentId, orderAuthenticatePaymentRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Get Payment by ID
     *
     * Use this API to view payment details of an order for a payment ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGOrderFetchPaymentTest() throws ApiException {
        String xApiVersion = null;
        String orderId = null;
        String cfPaymentId = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        PaymentEntity response = api.pGOrderFetchPayment(xApiVersion, orderId, cfPaymentId, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Get Payments for an Order
     *
     * Use this API to view all payment details for an order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGOrderFetchPaymentsTest() throws ApiException {
        String xApiVersion = null;
        String orderId = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        List<PaymentEntity> response = api.pGOrderFetchPayments(xApiVersion, orderId, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Order Pay
     *
     * Use this API when you have already created the orders and want Cashfree to process the payment. To use this API S2S flag needs to be enabled from the backend. In case you want to use the cards payment option the PCI DSS flag is required, for more information send an email to \&quot;care@cashfree.com\&quot;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGPayOrderTest() throws ApiException {
        String xApiVersion = null;
        PayOrderRequest payOrderRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        PayOrderEntity response = api.pGPayOrder(xApiVersion, payOrderRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

}
