/*
 * Cashfree Payment Gateway APIs
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2022-09-01
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.client;

import com.cashfree.ApiException;
import com.cashfree.model.ApiError;
import com.cashfree.model.ApiError404;
import com.cashfree.model.ApiError409;
import com.cashfree.model.ApiError502;
import com.cashfree.model.AuthenticationError;
import com.cashfree.model.BadRequestError;
import com.cashfree.model.EligibilityCardlessEMIEntity;
import com.cashfree.model.EligibilityFetchCardlessEMIRequest;
import com.cashfree.model.EligibilityFetchOffersRequest;
import com.cashfree.model.EligibilityFetchPaylaterRequest;
import com.cashfree.model.EligibilityFetchPaymentMethodsRequest;
import com.cashfree.model.EligibilityOfferEntity;
import com.cashfree.model.EligibilityPaylaterEntity;
import com.cashfree.model.EligibilityPaymentMethodsEntity;
import com.cashfree.model.IdempotencyError;
import com.cashfree.model.RateLimitError;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EligibilityApi
 */
@Disabled
public class EligibilityApiTest {

    private final EligibilityApi api = new EligibilityApi();

    /**
     * Get Eligible Cardless EMI Payment Methods for a customer on an order
     *
     * Use this API to get eligible Cardless EMI Payment Methods available for a customer on an order basis their phone number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGEligibilityFetchCardlessEMITest() throws ApiException {
        String xApiVersion = null;
        EligibilityFetchCardlessEMIRequest eligibilityFetchCardlessEMIRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        List<EligibilityCardlessEMIEntity> response = api.pGEligibilityFetchCardlessEMI(xApiVersion, eligibilityFetchCardlessEMIRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Get Eligible Offers for an Order
     *
     * Use this API to get eligible offers for an order_id or order amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGEligibilityFetchOffersTest() throws ApiException {
        String xApiVersion = null;
        EligibilityFetchOffersRequest eligibilityFetchOffersRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        List<EligibilityOfferEntity> response = api.pGEligibilityFetchOffers(xApiVersion, eligibilityFetchOffersRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Get Eligible Paylater for a customer on an order
     *
     * Use this API to get eligible Paylater Payment Methods for a customer on an order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGEligibilityFetchPaylaterTest() throws ApiException {
        String xApiVersion = null;
        EligibilityFetchPaylaterRequest eligibilityFetchPaylaterRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        List<EligibilityPaylaterEntity> response = api.pGEligibilityFetchPaylater(xApiVersion, eligibilityFetchPaylaterRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

    /**
     * Get eligible Payment Methods
     *
     * Use this API to get eligible Payment Methods
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pGEligibilityFetchPaymentMethodsTest() throws ApiException {
        String xApiVersion = null;
        EligibilityFetchPaymentMethodsRequest eligibilityFetchPaymentMethodsRequest = null;
        String xRequestId = null;
        UUID xIdempotencyKey = null;
        List<EligibilityPaymentMethodsEntity> response = api.pGEligibilityFetchPaymentMethods(xApiVersion, eligibilityFetchPaymentMethodsRequest, xRequestId, xIdempotencyKey);
        // TODO: test validations
    }

}
